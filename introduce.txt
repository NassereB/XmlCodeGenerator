<h1 style='font-family: Malgun Gothic, Consolas; font-size: 20pt; color: #006699; text-align: center; font-weight: bold'>XmlCodeGeneartor</h1>
<p>
<br /><div style='font-size: 12pt; font-family: Malgun Gothic, Consolas; color: #2211AA; text-align: left; font-weight: bold'>Introduce</div>

C#/VB.NET code can be generated by XML + XSLT.



<br /><div style='font-size: 12pt; font-family: Malgun Gothic, Consolas; color: #2211AA; text-align: left; font-weight: bold'>What's New</div>

V 1.0: Initial checked-in.



<br /><div style='font-size: 12pt; font-family: Malgun Gothic, Consolas; color: #2211AA; text-align: left; font-weight: bold'>How to use</div>

1. Create your own XML file in your project. For example,

<pre style='margin: 10px 0px 10px 10px; padding: 10px 0px 10px 10px; background-color: #fbedbb; overflow: auto; font-family: Consolas, Verdana;' >
&lt;IFs&gt;
    &lt;DOIT condition="1" /&gt;
    &lt;DOIT condition="2" /&gt;
    &lt;DOIT condition="3" /&gt;
    &lt;DOIT condition="4" /&gt;
    &lt;DOIT condition="5" /&gt;
&lt;/IFs&gt;
</pre>


2. Create your own XSLT file in the same directory of XML. You can write XSLT to produce source codes on XML. For example,

<pre style='margin: 10px 0px 10px 10px; padding: 10px 0px 10px 10px; background-color: #fbedbb; overflow: auto; font-family: Consolas, Verdana;' >
&lt;?xml version="1.0" encoding="UTF-8" ?&gt;
&lt;stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform"&gt;
&lt;output method="text"  encoding="utf-8" indent="yes"&gt;&lt;/output&gt;
    &lt;template match="IFs"&gt;
        using System;
        using System.Collections.Generic;
        using System.Text;

        namespace macroTest
        {
            public partial class Test
            {
                private void DoIt(int condition)
                {
                    &lt;apply-templates select="//DOIT"&gt;&lt;/apply-templates&gt;
                }
            }
        }
    &lt;/template&gt;

    &lt;template match="//DOIT"&gt;
        if (condition == &lt;value-of select="@condition"/&gt;)
        {
            funcName_&lt;value-of select="@condition"/&gt;();
        }
    &lt;/template&gt;
&lt;/stylesheet&gt;
</pre>


3. Finally, select Xml file and type 'XmlCodeGenerator' on 'Custom Tool' in properties.

<img alt='http://res.sysnet.pe.kr/sysnetimages/xml_xslt.png' src='/SysWebRes/bbs/http://res.sysnet.pe.kr/sysnetimages/xml_xslt.png' />
   
        
4. Now, whenever you save xml file, [xml-filename].cs file will be generated by combining with XSLT. For example,

<pre style='margin: 10px 0px 10px 10px; padding: 10px 0px 10px 10px; background-color: #fbedbb; overflow: auto; font-family: Consolas, Verdana;' >
    using System;
    using System.Collections.Generic;
    using System.Text;dafdas

    namespace macroTest
    {
        public partial class Test
        {
        private void DoIt(int condition)
        {
    
            if (condition == 1)
            {
            funcName_1();
            }
      
            // .........[repeat]..........
        }
        }
    }    
</pre>

</p>
